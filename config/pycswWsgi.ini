[uwsgi]
; based on https://github.com/kartoza/docker-mapproxy/blob/master/build_data/uwsgi.ini
chdir = /home/pycsw/pycsw
wsgi-file = cors.py
pidfile = /tmp/pycsw.pid
socket = :{{ .Values.pycswPort }}
processes = {{ .Values.env.uwsgi.processes }} ; Maximum number of workers allowed
cheaper = 2                                   ; Minimum number of workers allowed
enable-threads = true
threads = {{ .Values.env.uwsgi.threads }}
master = true
disable-logging = true
vacuum = true
die-on-term = true                   ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true                      ; This parameter prevents uWSGI from starting if it is unable to find or load your application module
max-requests = 1000                  ; Restart workers after this many requests
reload-on-rss = 2048                 ; Restart workers after this much resident memory
worker-reload-mercy = 60             ; How long to wait before forcefully killing workers
wsgi-disable-file-wrapper = true
harakiri = 60
py-callos-afterfork = true           ; allow workers to trap signals
cheaper-algo = busyness
cheaper-initial = 2                  ; Workers created at startup
cheaper-overload = 1                 ; Length of a cycle in seconds
cheaper-step = 2                     ; How many workers to spawn at a time
cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max = 70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert = 2   ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step = 2    ; How many emergency workers to create if there are too many requests in the queue
chmod-socket = 664
uid = 1000
gid = 0
http-socket = :8080